/// # Even Fibonacci numbers
/// ## Problem 2
/// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
/// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
/// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

extern crate num;

use std::mem;

struct Fib {
    a: int,
    b: int,
}

impl Iterator<int> for Fib {
    fn next(&mut self) -> Option<int> {
        let new_b = self.a + self.b;
        let new_a = mem::replace(&mut self.b, new_b);

        Some(mem::replace(&mut self.a, new_a))
    }
}

fn main() {
    let fib = Fib {a: 1i, b: 2i};
    let mut total = 0;

    for n in fib.take_while(|&n| n <= 4000000) {
        if n % 2 == 0 {
            total +=n;
        }
    }

    println!("Result: {}", total);
}
